<!DOCTYPE html>
<html lang="fr">
<head>
    <!-- M√©tadonn√©es de base pour le document -->
    <meta charset="UTF-8"> <!-- D√©finit l'encodage des caract√®res (important pour les accents en fran√ßais) -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> <!-- Assure la r√©activit√© sur appareils mobiles -->
    <title>MySkittles</title> <!-- Titre de la page affich√© dans l'onglet du navigateur -->
    <link rel="icon" href="/Girafe.png" type="image/png"> <!-- Favicon (ic√¥ne affich√©e dans l'onglet) -->
    <link rel="stylesheet" href="/styles.css"> <!-- Liaison avec la feuille de style CSS externe -->
</head>
<body>
    <!-- Titre principal de la page -->
    <h1>Bienvenue sur notre boutique MySkittles, 100 % s√©curis√©, 100 % qualit√©</h1>

    <!-- Section des articles pr√©d√©finis avec des formulaires pour chaque type de Skittle -->
    <div class="predefined-articles">
        <!-- Formulaire pour les Skittles rouges -->
        <form action="/init/red" method="POST" class="predefined-article-form test">
            <!-- Image repr√©sentant le produit -->
            <img src="/rouge.png" alt="Skittle rouge">
            <!-- Bouton de soumission du formulaire -->
            <button type="submit">Ajouter Skittle rouge</button>
            <!-- Menu d√©roulant pour choisir la quantit√© -->
            <select name="qteArticle">
                <option value="5">5 skittles</option>
                <option value="10">10 skittles</option>
                <option value="15">15 skittles</option>
            </select>
            <!-- Menu d√©roulant pour choisir l'intensit√© -->
            <select name="intensite">
                <option value="1">1 mg</option>
                <option value="3">3 mg</option>
                <option value="5">5 mg</option>
            </select>
        </form>
        
        <!-- Formulaire pour les Skittles verts (structure identique au pr√©c√©dent) -->
        <form action="/init/green" method="POST" class="predefined-article-form test">
            <img src="/vert.png" alt="Skittle vert">
            <button type="submit">Ajouter Skittle vert</button>
            <select name="qteArticle">
                <option value="5">5 skittles</option>
                <option value="10">10 skittles</option>
                <option value="15">15 skittles</option>
            </select>
            <select name="intensite">
                <option value="1">1 mg</option>
                <option value="3">3 mg</option>
                <option value="5">5 mg</option>
            </select>
        </form>
        
        <!-- Formulaire pour les Skittles violets (structure identique aux pr√©c√©dents) -->
        <form action="/init/purple" method="POST" class="predefined-article-form test">
            <img src="/violet.png" alt="Skittle violet">
            <button type="submit">Ajouter Skittle violet</button>
            <select name="qteArticle">
                <option value="5">5 skittles</option>
                <option value="10">10 skittles</option>
                <option value="15">15 skittles</option>
            </select>
            <select name="intensite">
                <option value="1">1 mg</option>
                <option value="3">3 mg</option>
                <option value="5">5 mg</option>
            </select>
        </form>
    </div>

    <!-- Ic√¥ne du panier en haut √† droite avec compteur d'articles -->
    <div id="cart-icon" onclick="toggleCart()">
        üõí <!-- Emoji panier -->
        <span id="cart-count" style="display: none;">0</span> <!-- Compteur d'articles (cach√© par d√©faut) -->
    </div>
    
    <!-- Le panier lui-m√™me (contenu) -->
    <div id="cart">
        <h2>Panier</h2>
        <ul id="cart-items">
            <!-- Logique conditionnelle EJS pour afficher le contenu du panier -->
            <% if (articles.length > 0) { %> <!-- V√©rifie si le panier contient des articles -->
                <!-- Boucle sur chaque article du panier -->
                <% articles.forEach(article => { %>
                    <li>
                        <div class="cart-item">
                            <div class="cart-item-info">
                                <!-- Affichage des d√©tails de l'article avec les variables EJS -->
                                <strong><%= article.article %></strong>
                                <p>Quantit√©: <%= article.qteArticle %> skittle(s)</p>
                                <p>Intensit√©: <%= article.intensite %> mg</p>
                                <p>Description: <%= article.description %></p>
                                <p>Prix: <%= article.prix %> ‚Ç¨</p>
                            </div>
                            <!-- Formulaire pour supprimer un article sp√©cifique du panier -->
                            <form action="/articles/supprimer/<%= article._id %>" method="POST" class="cart-item-remove">
                                <button type="submit">Supprimer cet article ‚ò†Ô∏è</button>
                            </form>
                        </div>
                    </li>
                <% }); %>
                <!-- Affichage du prix total du panier -->
                <li>
                    <strong>Total: <%= typeof totalPrix !== 'undefined' ? totalPrix : 0 %> ‚Ç¨</strong>
                </li>
            <% } else { %>
                <!-- Message affich√© si le panier est vide -->
                <li>Votre panier est vide.</li>
            <% } %>
        </ul>
        <!-- Formulaire pour vider enti√®rement le panier -->
        <form action="/articles/videPannier" method="POST" class="empty-cart-form">
            <button type="submit" id="empty-cart-button">Vider le panier</button>
        </form>
        <!-- Formulaire pour passer √† la phase de paiement -->
        <form action="/paiement" method="GET" class="validate-cart-form">
            <button type="submit" id="validate-cart-button">Valider le panier</button>
        </form>
    </div>

    <!-- Section pour les demandes sp√©cifiques/personnalis√©es -->
    <div class="specific-request">
        <h2>Demande de Skittles sp√©cifiques</h2>
        <form action='/articles/ajout' method="POST">
            <!-- Champs de saisie pour les informations personnalis√©es -->
            <input type="text" name="article" placeholder="Article">
            <input type="text" name="qteArticle" placeholder="Quantit√© de l'article (skittle(s))">
            <input type="text" name="intensite" placeholder="Intensit√© (mg)">
            <input type="text" name="description" placeholder="Description">
            <br>
            <button type="submit">Ajouter</button>
        </form>
    </div>
    
    <!-- Ic√¥ne pour acc√©der au chat en bas de page -->
    <div id="chat-bubble">
        üí¨ <!-- Emoji bulle de discussion -->
        <span id="unread-count" style="display: none;">0</span> <!-- Compteur de messages non lus (cach√© par d√©faut) -->
    </div>

    <!-- Interface de chat -->
    <div id="chat">
        <ul id="messages"></ul> <!-- Liste des messages -->
        <input id="messageInput" placeholder="Votre message..." autocomplete="off"> <!-- Champ de saisie du message -->
        <button id="sendButton">Envoyer</button> <!-- Bouton d'envoi -->
    </div>

    <!-- Importation de la biblioth√®que Socket.io (fournie par le serveur) -->
    <script src="/socket.io/socket.io.js"></script>
    
    <!-- Script JavaScript pour la gestion dynamique de la page -->
    <script>
        // Initialisation de la connexion Socket.io
        var socket = io();
        
        // R√©cup√©ration des √©l√©ments du DOM pour manipulation ult√©rieure
        var messageInput = document.getElementById('messageInput');
        var messages = document.getElementById('messages');
        var sendButton = document.getElementById('sendButton');
        var chatBubble = document.getElementById('chat-bubble');
        var chat = document.getElementById('chat');
        var cartCount = document.getElementById('cart-count');
        var cartItems = document.getElementById('cart-items');
        var unreadCount = document.getElementById('unread-count');
        var unreadMessages = 0; // Compteur des messages non lus
        var emptyCartButton = document.getElementById('empty-cart-button');
        var validateCartButton = document.getElementById('validate-cart-button');

        // Gestion du clic sur la bulle de chat pour afficher/masquer le chat
        chatBubble.addEventListener('click', function() {
            // Bascule l'affichage du chat
            chat.style.display = chat.style.display === 'none' ? 'block' : 'none';
            // Si le chat est affich√©, r√©initialise le compteur de messages non lus
            if (chat.style.display === 'block') {
                unreadMessages = 0;
                unreadCount.style.display = 'none';
            }
        });

        // Gestion du clic sur le bouton d'envoi de message
        sendButton.addEventListener('click', function() {
            var msg = messageInput.value;
            socket.emit('message', msg); // Envoi du message au serveur via Socket.io
            messageInput.value = ''; // Effacement du champ apr√®s envoi
        });

        // Envoi du message en appuyant sur la touche Entr√©e
        messageInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Emp√™che le comportement par d√©faut (nouvelle ligne)
                sendButton.click(); // D√©clenche le clic sur le bouton d'envoi
            }
        });

        // Gestion de la r√©ception d'un message du serveur
        socket.on('message', function(msg) {
            // Cr√©ation d'un nouvel √©l√©ment de liste pour le message
            var li = document.createElement('li');
            li.textContent = msg;
            messages.appendChild(li);
            
            // Si le chat est masqu√©, incr√©mente le compteur de messages non lus
            if (chat.style.display === 'none') {
                unreadMessages++;
                unreadCount.textContent = unreadMessages;
                unreadCount.style.display = 'inline';
            }
            
            // D√©filement automatique vers le bas pour voir les nouveaux messages
            messages.scrollTop = messages.scrollHeight;
        });

        // Fonction pour afficher/masquer le panier au clic sur l'ic√¥ne
        function toggleCart() {
            var cart = document.getElementById('cart');
            cart.style.display = cart.style.display === 'none' ? 'block' : 'none';
        }

        // Fonction pour mettre √† jour le compteur d'articles du panier
        function updateCartCount() {
            // Calcule le nombre d'articles (moins 1 pour ne pas compter l'√©l√©ment du total)
            var itemCount = cartItems.getElementsByTagName('li').length - 1;
            
            if (itemCount > 0) {
                // Affiche le compteur, met √† jour sa valeur et affiche les boutons
                cartCount.style.display = 'inline';
                cartCount.textContent = itemCount;
                emptyCartButton.style.display = 'inline';
                validateCartButton.style.display = 'inline';
            } else {
                // Masque le compteur et les boutons si le panier est vide
                cartCount.style.display = 'none';
                emptyCartButton.style.display = 'none';
                validateCartButton.style.display = 'none';
            }
        }

        // Mise √† jour initiale du compteur du panier au chargement de la page
        updateCartCount();
    </script>

</body>
</html>